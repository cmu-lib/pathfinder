% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/greedy_search.R
\name{greedy_search}
\alias{greedy_search}
\title{Greedy search for bundled edges}
\usage{
greedy_search(graph, starting_point = 1, edge_bundles,
  quiet = !interactive(), distances, penalize = TRUE)
}
\arguments{
\item{graph}{An \link[igraph:igraph]{igraph::igraph} object.}

\item{starting_point}{Integer. Index of the point from which to start the search.}

\item{quiet}{Boolean. Display progress?}

\item{distances}{Double. A vector of length \code{ecount(graph)} with the distances of each edge.}

\item{penalize}{Boolean. Penalize the edge distance of already-crossed bundles to discourage crossing the same bundles more than once?}

\item{edge_bundles.}{A list of integer vectors. Each list item will be considered one edge bundle, and each vector the edge indices belonging to that bundle.}
}
\value{
An object
}
\description{
This strategy uses a greedy search along the original graph. It will navigate
to a node tangent to the nearest edge bundle, cross that bundle, then find
the next closest bundle, and so on, until at least one edge in each of the
specified bundles has been visited.
}
\details{
The penalty function will make crossing any edge in an already-corssed bundle
extremely unattractive to the pathfinding function. By setting the edge
distance to a very high, but still finite, number, this will allow the path
to cross and already-traversed edge bundle again if there are no other
options available.
}
