% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/greedy_search.R
\name{greedy_search}
\alias{greedy_search}
\title{Greedy search for bundled edges}
\usage{
greedy_search(graph, edge_bundles, distances, starting_point = 1,
  penalize = TRUE, penalty_fun = penalize_square,
  quiet = !interactive())
}
\arguments{
\item{graph}{An \code{\link{igraph}} object.}

\item{edge_bundles}{A list of integer vectors. Each list item will be
considered one edge bundle, and each vector the edge indices belonging to
that bundle.}

\item{distances}{Double. A vector of length \code{ecount(graph)} with the
distances of each edge.}

\item{starting_point}{Integer. Index of the point from which to start the
search.}

\item{penalize}{Boolean. Penalize the edge distance of already-crossed
bundles to discourage crossing the same bundles more than once?}

\item{penalty_fun}{A function to penalize the weights of all edges in a
bundle any time at least one edge in that bundle is traversed. Defaults to
\code{\link{penalize_square}}, however can be set to \code{\link{penalize_inf}} to set weight to
\code{Inf} and thus forbid recrossing a bundle. Using \code{\link{penalize_inf}} can result
in an incomplete path. See \code{\link{penalize}} for guidance on supplying your own
function. Ignored if \code{penalize = FALSE}.}

\item{quiet}{Boolean. Display progress?}
}
\value{
A \code{pathfinder_path} object, which is a list with the following elements:
\itemize{
\item \code{epath}: A list of integer vectors representing the successive edges
crossed by the path
\item \code{vpath}: A list of integer vectors representing the successive vertices
crossed by the path
\item \code{bpath}: A list of integer vectors representing the successive edge bundles
crossed by the path
}
}
\description{
This strategy uses a greedy search along the original graph. It will navigate
to a node tangent to the nearest edge bundle, cross that bundle, then find
the next closest bundle, and so on, until at least one edge in each of the
specified bundles has been visited.
}
\details{
The penalty function will make crossing any edge in an already-crossed bundle
extremely unattractive to the pathfinding function. By setting the edge
distance to a very high, but still finite, number, this will allow the path
to cross and already-traversed edge bundle again if there are no other
options available.
}
